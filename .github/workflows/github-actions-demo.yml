name: Docker Actions
run-name: ${{ github.actor }} is use GitHub Actions 🚀
on: [push]
env:
  DOCKER_VERSION: ${{ secrets.DOCKER_VERSION }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: check code 
        uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Decrypt configuration file
        run: |
          cd src/main/resources
          openssl aes-256-cbc -d -in application-dev.properties.enc -out application-dev.properties -k ${{ secrets.CONFIG_PASSWORD }}
      - name: Build with Maven
        run: |
          pwd
          ls -a
          mvn -B package -DskipTests=true -Dmaven.test.skip=true --file pom.xml
      # 
      - name: Upload build artifact
        uses: actions/upload-artifact@v4.3.6
        with:
          name: build-artifact
          path: target/yubi-backend-0.0.1-SNAPSHOT.jar
  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download build artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: build-artifact
          path: ./target/
      - name: login docker account
        uses: docker/login-action@v3.3.0
        with:
          registry: docker.io
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKER_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: build docker image
        run: |
          ls -a
          pwd
          docker build -t leikooo/leikoobi-backend:$DOCKER_VERSION .
      - name: push Image to Docker hub
        run: docker push leikooo/leikoobi-backend:$DOCKER_VERSION
      - name: login service pull docker image and run
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          envs: DOCKER_VERSION
          script: |
            # 检查 9090 端口是否被占用
            if lsof -i:9090; then
              echo "Port 9090 is in use. Killing the process."
              # 获取占用端口的进程ID并终止它
              kill -9 $(lsof -ti:9090)
            fi
      
            # 拉取最新的 Docker 镜像
            docker pull leikooo/leikoobi-backend:$DOCKER_VERSION
      
            # 检查是否有已经运行的同名容器
            if docker ps -a --filter "name=leikoobi-backend" --format "{{.ID}}"; then
              echo "Stopping and removing existing container."
              docker stop leikoobi-backend || true
              docker rm leikoobi-backend || true
            fi
      
            # 运行新的容器
            docker run --name leikoobi-backend -p 9090:9090 -d leikooo/leikoobi-backend:$DOCKER_VERSION
